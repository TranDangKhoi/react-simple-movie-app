{"version":3,"file":"static/js/305.2fb57488.chunk.js","mappings":"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","sources":["components/movie/MovieCard.js","pages/MovieDetailsPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { tmdbAPI } from \"../../config\";\r\nimport Button from \"../button/Button\";\r\n\r\nconst MovieCard = ({ item }) => {\r\n  const { title, vote_average, release_date, poster_path, id } = item;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"flex flex-col h-full p-3 text-white rounded-lg select-none movie-card bg-slate-800\">\r\n      <img\r\n        src={tmdbAPI.imageOriginal(poster_path)}\r\n        alt=\"\"\r\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5\"\r\n      />\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h3 className=\"mb-3 text-lg font-bold text-white\">{title}</h3>\r\n        <div className=\"flex items-center justify-between mb-10 opacity-50\">\r\n          <span>{new Date(release_date).getFullYear()}</span>\r\n          <span>{vote_average}</span>\r\n        </div>\r\n        <Button bgColor=\"secondary\" onClick={() => navigate(`/movie/${id}`)}>\r\n          Watch now\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { FreeMode, Navigation } from \"swiper\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport useSWR from \"swr\";\r\nimport MovieCard from \"components/movie/MovieCard\";\r\nimport { fetcher, tmdbAPI } from \"config\";\r\n// 3ce49afbabd14f11e4b7097cf42c2ab9\r\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=3ce49afbabd14f11e4b7097cf42c2ab9&language=en-US\r\nconst MovieDetailsPage = () => {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieDetails(movieId), fetcher);\r\n  if (!data) return null;\r\n  const { overview, backdrop_path, poster_path, title, genres } = data;\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"relative w-full h-screen mb-10 text-white bg-no-repeat bg-cover \"\r\n        style={{\r\n          backgroundImage: `url(${tmdbAPI.imageOriginal(backdrop_path)})`,\r\n        }}\r\n      >\r\n        <div className=\"absolute inset-0 h-full overlay bg-gradient-to-t from-black to-transparent\"></div>\r\n      </div>\r\n      <div className=\"w-full h-[400px] max-w-[800px] mx-auto -mt-[200px] z-10 relative\">\r\n        <img\r\n          src={tmdbAPI.imageOriginal(poster_path)}\r\n          alt=\"\"\r\n          className=\"object-cover w-full h-full mx-auto rounded-xl\"\r\n        />\r\n      </div>\r\n      <h1 className=\"text-center mt-10 text-[52px] text-white\">{title}</h1>\r\n      {genres.length > 0 && (\r\n        <div className=\"flex items-center justify-center mb-10 gap-x-5\">\r\n          {genres.map((item) => (\r\n            <span\r\n              className=\"text-white text-[15px] border-2 border-primary rounded-lg py-2 px-4 flex items-center justify-center\"\r\n              key={item.id}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <p className=\"text-[19px] mb-10 text-center leading-loose max-w-[700px] mx-auto text-white\">\r\n        {overview}\r\n      </p>\r\n      <MovieCredits></MovieCredits>\r\n      <MovieVideos></MovieVideos>\r\n      <MoviesSimilar></MoviesSimilar>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction MovieCredits() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(\"credits\", movieId), fetcher);\r\n  //https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=3ce49afbabd14f11e4b7097cf42c2ab9\r\n  // console.log(\"log ~ MovieCredits ~ data\", data);\r\n  if (!data) return null;\r\n  const { cast } = data;\r\n  if (!cast || cast.length < 0) return;\r\n  return (\r\n    <div className=\"text-white\">\r\n      <h1 className=\"text-center text-white font-medium text-[36px] mb-10\">\r\n        Credits\r\n      </h1>\r\n      <div className=\"grid grid-cols-4 gap-5 px-10\">\r\n        {cast.length > 0 &&\r\n          cast.slice(0, 8).map((item) => (\r\n            <div key={item.id} className=\"cast-item\">\r\n              <img\r\n                src={tmdbAPI.imageOriginal(item.profile_path)}\r\n                alt=\"\"\r\n                className=\"w-full h-[350px] object-cover rounded-lg mb-5\"\r\n              />\r\n              <h3 className=\"text-xl font-medium text-center\">{item.name}</h3>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MovieVideos() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(\"videos\", movieId), fetcher);\r\n  if (!data || !data.results) return null;\r\n  const { results } = data;\r\n  if (!results || results.length < 0) return null;\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center text-white font-medium text-[36px] mb-10\">\r\n        Teaser & Trailers\r\n      </h1>\r\n      <div className=\"grid items-center grid-cols-3 gap-10 text-white justify-items-center\">\r\n        {results.slice(0, 6).map((item) => (\r\n          <div key={item.id} className=\"mb-10\">\r\n            <iframe\r\n              width=\"557\"\r\n              height=\"370\"\r\n              src={`https://www.youtube.com/embed/${item.key}`}\r\n              title={item.name}\r\n              frameBorder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MoviesSimilar() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(\"similar\", movieId), fetcher);\r\n  if (!data || !data.results) return null;\r\n  const { results } = data;\r\n  if (!results || results.length < 0) return null;\r\n  return (\r\n    <div className=\"py-10 mx-auto text-center text-white\">\r\n      <h2 className=\"mb-10 text-3xl font-medium\">Similar Movies</h2>\r\n      <div className=\"movie-list\">\r\n        <Swiper\r\n          freeMode={true}\r\n          navigation={true}\r\n          grabCursor={true}\r\n          slidesPerView={\"auto\"}\r\n          spaceBetween={40}\r\n          modules={[FreeMode, Navigation]}\r\n        >\r\n          {results.length > 0 &&\r\n            results.map((item) => (\r\n              <SwiperSlide key={item.id}>\r\n                <MovieCard item={item}></MovieCard>\r\n              </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MovieDetailsPage;\r\n"],"names":["item","title","vote_average","release_date","poster_path","id","navigate","useNavigate","className","src","tmdbAPI","alt","Date","getFullYear","bgColor","onClick","MovieCredits","movieId","useParams","data","useSWR","fetcher","cast","length","slice","map","profile_path","name","MovieVideos","results","width","height","key","frameBorder","allow","allowFullScreen","MoviesSimilar","freeMode","navigation","grabCursor","slidesPerView","spaceBetween","modules","FreeMode","Navigation","overview","backdrop_path","genres","style","backgroundImage"],"sourceRoot":""}